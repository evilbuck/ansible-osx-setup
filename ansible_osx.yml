---
- hosts: localhost
  tasks:
    # - name: Make sure homebrew bin is in path
    #   ansible.builtin.lineinfile:
    #     path: /etc/paths
    #     state: present
    #     line: "/opt/homebrew/bin"
    #   become: true
    #   become_user: root

    - name: Install core packages via brew casks
      community.general.homebrew_cask:
        name: "{{ item }}"
      ignore_errors: yes
      with_items:
        - 1password
        - docker
        - google-chrome
        - iterm2
        - ngrok
        - telegram
        - visual-studio-code

    - name: "Install homebrew packages"
      community.general.homebrew:
        name:
          [
            "autoconf",
            "automake",
            "coreutils",
            "curl",
            "direnv",
            "gpg",
            "htop",
            "imagemagick@6",
            "libtool",
            "libxslt",
            "libyaml",
            "openssl",
            "pkg-config",
            "readline",
            "redis",
            "sqlite3",
            "tmux",
            "unzip",
            "neovim",
            "zlib",
            "zsh",
          ]
        state: present
        update_homebrew: yes

    # - name: "Install from Mac app store"
    #   shell: mas install {{ item }}
    #   with_items:
    #     - 497799835 # xcode

    - name: Get the path to ZSH
      become: false
      local_action: command which zsh
      register: zsh_path

    - name: "Ensure homebrew zsh is in allowed shells"
      lineinfile:
        path: /etc/shells
        line: "{{ zsh_path.stdout }}"
      become: true

    # - name: Install Oh My ZSH
    #   shell: sh -c "$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)"
    #   args:
    #     creates: "/Users/{{ lookup('env', 'USER') }}/.oh-my-zsh"

    - name: Install chezmoi
      shell: brew install chezmoi
      args:
        creates: "/usr/local/bin/chezmoi"

    - name: Install chezmoi configuration
      shell: chezmoi init https://github.com/evilbuck/chezmoi.git

    - name: Apply chezmoi configuration
      shell: chezmoi apply
      args:

    - name: Set ZSH as the default shell
      shell: chsh -s $(which zsh) {{ lookup('env', 'USER') }}
      become: true
      when: lookup('env', 'SHELL') != '/bin/zsh'

    # Install Mise Version Manager
    - name: Install Mise Version Manager
      shell: brew install mise
      args:
        creates: "/usr/local/bin/mise"

    # Install Ruby with mise
    - name: Install Ruby with Mise
      shell: mise use -g ruby@3
      args:
        creates: "/usr/local/bin/ruby"
    - name: Install Gems with Mise
      shell: gem install bundler rails rubocop
      args:
        creates: "/usr/local/bin/ruby"

    # - name: Install Zed Editor for MacOS
    #   when: ansible_facts['platform'] == "Darwin"
    #   block:
    #     - name: Download Zed Editor
    #       shell: curl -L https://zed.dev/download/mac -o /tmp/zed.zip
    #       curl -L https://zed.dev/api/releases/stable/0.185.16/Zed-aarch64.dmg?browserId=196ce3fdd72169b-0773a1ceeb2656-19525636-157188-196ce3fdd7312c6 -o /tmp/zed.dmg
    #       args:
    #         creates: "/tmp/zed.zip"
    #     - name: Install Zed Editor
    #       shell: brew install zed
    #       args:
    #         creates: "/usr/local/bin/zed"
    # - name: Install Zed Editor for Linux
    #   when: ansible_facts['platform'] == "Linux"
    #   block:
    #     - name: Install Zed Editor
    #       shell: sudo apt-get install zed
    #       args:
    #         creates: "/usr/bin/zed"

    # - name: "Create a default ZSH configuration"
    #   template:
    #     src: templates/.zshrc.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/.zshrc
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: Create a default VSCode configuration
    #   template:
    #     src: templates/vscode-settings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/settings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: Create a default VSCode keuybinding configuration
    #   template:
    #     src: templates/vscode-keybindings.json.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/Library/Application Support/Code/User/keybindings.json
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # Add something which ensures path is set here
    # - name: Install VSCode extensions
    #   shell: code --install-extension {{ item }}
    #   with_items:
    #     - apollographql.vscode-apollo
    #     - bradlc.vscode-tailwindcss
    #     - castwide.solargraph
    #     - clinyong.vscode-css-modules
    #     - eamodio.gitlens
    #     - jakebecker.elixir-ls
    #     - kaiwood.endwise
    #     - karunamurti.haml
    #     - ms-vscode-remote.vscode-remote-extensionpack
    #     - ms-vscode.vscode-typescript-tslint-plugin
    #     - msjsdiag.debugger-for-chrome
    #     - rebornix.ruby
    #     - richie5um2.vscode-sort-json
    #     - Tyriar.sort-lines
    #     - vscodevim.vim
    #     - wholroyd.jinja
    #     - wingrunr21.vscode-ruby
    #     - xabikos.javascriptsnippets
    #     - streetsidesoftware.code-spell-checker
    #     - fabiospampinato.vscode-todo-plus

    # - git:
    #     repo: https://github.com/asdf-vm/asdf.git
    #     dest: "/Users/{{ lookup('env', 'USER') }}/.asdf"
    #     version: v0.8.1

    # - name: "Create a default asdf configuration"
    #   template:
    #     src: templates/.asdfrc.j2
    #     dest: /Users/{{ lookup('env', 'USER') }}/.asdfrc
    #     owner: "{{ lookup('env', 'USER') }}"
    #     force: yes

    # - name: "Install asdf plugins"
    #   shell: |
    #     source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
    #     asdf plugin-add {{ item }} || exit 0
    #   with_items:
    #     - ruby
    #     - elixir
    #     - nodejs
    #     - python
    #     - erlang

    # - name: "Install Default Ruby"
    #   shell: |
    #     source /Users/{{ lookup('env', 'USER') }}/.asdf/asdf.sh
    #     asdf install ruby 3.0.2
    #     asdf global ruby 3.0.2
    #     gem install bundler
    #     gem install cocoapods
    #     gem install rubocop
    #     gem install solargraph

    # - name: re-generate bins now we've installed some yarn packages
    #   shell: asdf reshim nodejs
